// ------------------------------------------
//  Button
// ------------------------------------------
@use 'sass:list';
@use '../../abstracts/functions' as *;
@use './button-variables' as btnVars;

$button-size: (
  // value : padding-x padding-y, font-size, radius, border
  sm: (
      btnVars.$btn-padding-sm-x,
      btnVars.$btn-padding-sm-y,
      btnVars.$btn-font-size-sm,
      btnVars.$btn-radius-sm
    ),
  md: (
    btnVars.$btn-padding-md-x,
    btnVars.$btn-padding-md-y,
    btnVars.$btn-font-size-md,
    btnVars.$btn-radius-md
  ),
  lg: (
    btnVars.$btn-padding-lg-x,
    btnVars.$btn-padding-lg-y,
    btnVars.$btn-font-size-lg,
    btnVars.$btn-radius-lg
  )
);
$button-types: (
  // color : text color, bg, hover, disabled text, disabled bg, opacity
  primary: (
      btnVars.$btn-primary-text,
      btnVars.$btn-primary-bg,
      btnVars.$btn-primary-hover,
      btnVars.$btn-disabled-text,
      btnVars.$btn-disabled-bg,
      btnVars.$btn-disabled-opacity
    ),
  secondary: (
    btnVars.$btn-secondary-text,
    btnVars.$btn-secondary-bg,
    btnVars.$btn-secondary-hover,
    btnVars.$btn-disabled-text,
    btnVars.$btn-disabled-bg,
    btnVars.$btn-disabled-filter
  ),
  danger: (
    btnVars.$btn-danger-text,
    btnVars.$btn-danger-bg,
    btnVars.$btn-danger-hover,
    btnVars.$btn-disabled-text,
    btnVars.$btn-disabled-bg,
    btnVars.$btn-disabled-opacity
  ),
  outline: (
    btnVars.$btn-outline-text,
    btnVars.$btn-outline-bg,
    btnVars.$btn-outline-hover,
    btnVars.$btn-disabled-text,
    btnVars.$btn-disabled-bg,
    1
  )
);

/* button base style */
%button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: btnVars.$btn-font-weight;
  line-height: btnVars.$btn-line-height;
  letter-spacing: btnVars.$btn-letter-spacing;
  font-family: btnVars.$btn-font-family;
  text-transform: none;
  transition:
    background-color 0.25s ease,
    color 0.25s ease,
    border-color 0.25s ease;
  border: none;
  cursor: pointer;
}

.button {
  @extend %button-base;

  /* ========== Size ========== */
  @each $bs, $values in $button-size {
    &.btn-#{$bs} {
      padding: rem(list.nth($values, 2)) rem(list.nth($values, 1));
      font-size: rem(list.nth($values, 3));
      border-radius: rem(list.nth($values, 4));
    }
  }

  /* ========== Type ========== */
  @each $bt, $colors in $button-types {
    &.btn-#{$bt} {
      color: list.nth($colors, 1);
      background-color: list.nth($colors, 2);

      @if $bt == 'outline' {
        border: 1px solid list.nth($colors, 1);
      } @else {
        border: none;
      }

      &[disabled] {
        color: list.nth($colors, 4);
        background-color: list.nth($colors, 5);
        opacity: if($bt == 'secondary', 1, list.nth($colors, 6));
        @if $bt == 'secondary' {
          filter: list.nth($colors, 6);
        }
        cursor: not-allowed;
      }
      &:hover:not(.disabled) {
        background-color: list.nth($colors, 3);
      }
    }
  }

  /* ========== State Styles ========== */

  &.fullWidth {
    width: 100%;
  }

  /* 로딩 스피너 */
  .spinner {
    width: 16px;
    height: 16px;
    border: 2px solid #fff;
    border-top-color: transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}
